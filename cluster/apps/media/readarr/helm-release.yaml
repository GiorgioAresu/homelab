---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: readarr
  namespace: media
spec:
  chart:
    spec:
      chart: app-template
      version: 2.0.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 10m0s
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: lscr.io/linuxserver/readarr
              tag: 0.3.6-develop
              pullPolicy: IfNotPresent
            probes:
              liveness:
                spec:
                  timeoutSeconds: 2
              readiness:
                spec:
                  timeoutSeconds: 2
              startup:
                spec:
                  timeoutSeconds: 2
            env:
              TZ: ${TIMEZONE}
              PUID: 568
              PGID: 1003
            resources:
              requests:
                cpu: 15m
                memory: 0.5G
              limits:
                # cpu: 500m
                memory: 1G
        strategy: Recreate
    service:
      main:
        ports:
          http:
            port: 8787
    ingress:
      main:
        enabled: true
        className: "nginx-internal"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-prod"
          hajimari.io/enable: "true"
          hajimari.io/group: "media"
          hajimari.io/icon: "bookshelf"
          hajimari.io/info: "Books"
        hosts:
          - host: &host "readarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: readarr-tls
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: readarr-config-v1
        globalMounts:
          - path: /config
      books:
        enabled: true
        type: nfs
        server: "${TRUENAS_ADDR}"
        path: /mnt/tank/media
        globalMounts:
          - path: /books
            subPath: Books
      downloads:
        enabled: true
        type: nfs
        server: "${TRUENAS_ADDR}"
        path: /mnt/tank/downloads
        globalMounts:
          - path: /downloads
            subPath: complete/books
