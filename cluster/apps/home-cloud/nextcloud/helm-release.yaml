---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: home-cloud
spec:
  chart:
    spec:
      chart: nextcloud
      version: 3.5.13
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  interval: 10m0s
  values:
    image:
      repository: nextcloud
      tag: 25.0.7-fpm # or 25.0.7-fpm-alpine
      pullPolicy: IfNotPresent
    strategy:
      type: Recreate
    ingress:
      enabled: true
      className: "nginx-internal"
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        hajimari.io/enable: "true"
        hajimari.io/icon: "cloud"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
        # nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
        # nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        nginx.ingress.kubernetes.io/proxy-body-size: 4G
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
          rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      tls:
        - hosts:
            - &host "nextcloud.${SECRET_DOMAIN}"
          secretName: nextcloud-tls
    nextcloud:
      host: *host
      extraEnvs:
        REDIS_HOST: redis-master.infrastructure
        REDIS_HOST_PASSWORD: "${SECRET_REDIS_PASSWORD}"
      configs:
        proxy.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' => array(
              0 => '127.0.0.1',
              1 => '10.0.0.0/8',
            ),
            'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
          );
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgres
      host: postgres.infrastructure
      database: nextcloud-test
      existingSecret:
        enabled: true
        secretName: nextcloud-db-secret
        usernameKey: username
        passwordKey: password
    # persistence:
    #   enabled: true
    #   existingClaim: nextcloud-data-v1
    metrics:
      enabled: false
    resources:
      requests:
        memory: 0.5Gi
        cpu: 100m
      limits:
        memory: 4Gi
    startupProbe:
      enabled: true
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
