---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: paperless-ngx
  namespace: home-cloud
spec:
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 10m0s
  values:
    controllers:
      main:
        containers:
          paperless:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.9.0
              pullPolicy: IfNotPresent
            env:
              TZ: ${TIMEZONE}
              PAPERLESS_OCR_LANGUAGE: ita+eng
              PAPERLESS_REDIS: redis://:${SECRET_REDIS_PASSWORD}@redis-master.infrastructure:6379
              PAPERLESS_TIME_ZONE: "${TIMEZONE}"
              PAPERLESS_URL: "https://paperless.${SECRET_DOMAIN}"
              PAPERLESS_CONSUMER_POLLING: 60
              PAPERLESS_TIKA_ENABLED: 1
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
              PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
              PAPERLESS_WORKER_TIMEOUT: 3600 # 1h
            envFrom:
              - secretRef:
                  name: paperless-db
            probes:
              liveness:
                spec:
                  timeoutSeconds: 3
              readiness:
                spec:
                  timeoutSeconds: 3
            resources:
              requests:
                memory: 0.5Gi
                cpu: 100m
              limits:
                memory: 2Gi
          gotenberg:
            image:
              repository: gotenberg/gotenberg
              tag: 8.3.0
              pullPolicy: IfNotPresent
            ports:
              - containerPort: 3000
            command:
              - "gotenberg"
              - "--chromium-disable-javascript=true"
              - "--chromium-allow-list=file:///tmp/.*"
          tika:
            image:
              repository: ghcr.io/paperless-ngx/tika
              tag: 2.9.1-minimal
              pullPolicy: IfNotPresent
            ports:
              - containerPort: 9998
        strategy: Recreate
        annotations:
          secret.reloader.stakater.com/reload: paperless-db
    service:
      main:
        controller: main
        ports:
          http:
            port: 8000
    ingress:
      main:
        enabled: true
        className: "nginx-internal"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-prod"
          hajimari.io/enable: "true"
          hajimari.io/icon: "leaf"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        hosts:
          - host: &host "paperless.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: paperless-tls
    persistence:
      # -- Configure persistence for data.
      data:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: paperless-data-v1
        globalMounts:
          - path: /usr/src/paperless/data
      # -- Configure persistence for media.
      media:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: paperless-media-v1
        globalMounts:
          - path: /usr/src/paperless/media
      # -- Configure volume to monitor for new documents.
      consume:
        enabled: true
        type: nfs
        server: "${TRUENAS_ADDR}"
        path: /mnt/tank/media
        globalMounts:
          - path: /usr/src/paperless/consume
            subPath: Paperless/consume
      # -- Configure export volume.
      export:
        enabled: true
        type: nfs
        server: "${TRUENAS_ADDR}"
        path: /mnt/tank/media
        globalMounts:
          - path: /usr/src/paperless/export
            subPath: Paperless/export
